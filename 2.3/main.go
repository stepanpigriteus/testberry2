package main

import (
	"fmt"
	"os"
)

func Foo() error {
	var err *os.PathError = nil
	return err
}

func main() {
	err := Foo()            //  вернет интерфейс err со значением nil, типом os.PathError
	fmt.Println(err)        // выведет значение интерфейса = nil
	fmt.Println(err == nil) // при сравнении будет false, т.к. типы os.PathError и nil не эквивавлентный...тоесть интерфейс не пустой - его поле тип содержит  os.PathError
}

// Выведет: <nil> false

// Внутреннее устройство интерфейса
// Под капотом интерфейс хранится как две сущности (runtime представление):
// - itab (interface table) — указатель на таблицу, которая описывает:
// - к какому интерфейсу он относится,
// - какой конкретный тип лежит внутри,
// = указатели на методы.
// - data — указатель на саму конкретную переменную (значение).

// пустой interface{} не содержит itab, но имеет type descriptor и указатель и может содержать данные любого типа
